// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OverviewScreen /> should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OverviewScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="screen__heading"
>
          <h1
                    className="screen__heading-title"
          >
                    Network Canvas
          </h1>
          <h2
                    className="screen__heading-subtitle"
          >
                    Overview
          </h2>
</div>,
        <div
          className="screen__main"
>
          Various stats and info go here.
          <ServerPanel />
          <OverviewDashboard />
</div>,
      ],
      "className": "screen",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="screen__heading-title"
>
              Network Canvas
</h1>,
            <h2
              className="screen__heading-subtitle"
>
              Overview
</h2>,
          ],
          "className": "screen__heading",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Network Canvas",
              "className": "screen__heading-title",
            },
            "ref": null,
            "rendered": "Network Canvas",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Overview",
              "className": "screen__heading-subtitle",
            },
            "ref": null,
            "rendered": "Overview",
            "type": "h2",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Various stats and info go here.",
            <ServerPanel />,
            <OverviewDashboard />,
          ],
          "className": "screen__main",
        },
        "ref": null,
        "rendered": Array [
          "Various stats and info go here.",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="screen__heading"
>
            <h1
                        className="screen__heading-title"
            >
                        Network Canvas
            </h1>
            <h2
                        className="screen__heading-subtitle"
            >
                        Overview
            </h2>
</div>,
          <div
            className="screen__main"
>
            Various stats and info go here.
            <ServerPanel />
            <OverviewDashboard />
</div>,
        ],
        "className": "screen",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="screen__heading-title"
>
                Network Canvas
</h1>,
              <h2
                className="screen__heading-subtitle"
>
                Overview
</h2>,
            ],
            "className": "screen__heading",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Network Canvas",
                "className": "screen__heading-title",
              },
              "ref": null,
              "rendered": "Network Canvas",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Overview",
                "className": "screen__heading-subtitle",
              },
              "ref": null,
              "rendered": "Overview",
              "type": "h2",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Various stats and info go here.",
              <ServerPanel />,
              <OverviewDashboard />,
            ],
            "className": "screen__main",
          },
          "ref": null,
          "rendered": Array [
            "Various stats and info go here.",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
