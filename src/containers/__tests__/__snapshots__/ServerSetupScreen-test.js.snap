// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ServerSetupScreen /> should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ServerSetupScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="screen__heading"
>
          <h1
                    className="screen__heading-title"
          >
                    Network Canvas
          </h1>
</div>,
        <div
          className="screen__main"
>
          <FormWizard
                    nextButton={[Function]}
                    onSubmit={[Function]}
                    prevButton={[Function]}
                    submitButton={[Function]}
          >
                    <ProtocolSelectScreen />
                    <ServerIPScreen />
          </FormWizard>
</div>,
      ],
      "className": "screen",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1
            className="screen__heading-title"
>
            Network Canvas
</h1>,
          "className": "screen__heading",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Network Canvas",
            "className": "screen__heading-title",
          },
          "ref": null,
          "rendered": "Network Canvas",
          "type": "h1",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <FormWizard
            nextButton={[Function]}
            onSubmit={[Function]}
            prevButton={[Function]}
            submitButton={[Function]}
>
            <ProtocolSelectScreen />
            <ServerIPScreen />
</FormWizard>,
          "className": "screen__main",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <ProtocolSelectScreen />,
              <ServerIPScreen />,
            ],
            "nextButton": [Function],
            "onSubmit": [Function],
            "prevButton": [Function],
            "submitButton": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="screen__heading"
>
            <h1
                        className="screen__heading-title"
            >
                        Network Canvas
            </h1>
</div>,
          <div
            className="screen__main"
>
            <FormWizard
                        nextButton={[Function]}
                        onSubmit={[Function]}
                        prevButton={[Function]}
                        submitButton={[Function]}
            >
                        <ProtocolSelectScreen />
                        <ServerIPScreen />
            </FormWizard>
</div>,
        ],
        "className": "screen",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1
              className="screen__heading-title"
>
              Network Canvas
</h1>,
            "className": "screen__heading",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Network Canvas",
              "className": "screen__heading-title",
            },
            "ref": null,
            "rendered": "Network Canvas",
            "type": "h1",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormWizard
              nextButton={[Function]}
              onSubmit={[Function]}
              prevButton={[Function]}
              submitButton={[Function]}
>
              <ProtocolSelectScreen />
              <ServerIPScreen />
</FormWizard>,
            "className": "screen__main",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <ProtocolSelectScreen />,
                <ServerIPScreen />,
              ],
              "nextButton": [Function],
              "onSubmit": [Function],
              "prevButton": [Function],
              "submitButton": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
